@page "/"
@inject AccessService AccessService
@inject SettingsService SettingsService

@*
    Inhalte:
    ✅ Wilkommen
    ✅ Anmeldung (all / invited)
    ✅ Addressen (all / invited)
    ✅ Tagesablauf (all / invited)
*@

<div class="welcome-wrapper">
    <div class="background">
        <img src="images/Luzern_1_rmb.png"
             class="background-graphic"
             alt=""/>
        <img src="images/Zweig_gruen.png"
             id="leftBranch"
             class="background-graphic-branch"
             alt=""/>
        <img src="images/Zweig_gruen.png"
             id="rightBranch"
             class="background-graphic-branch"
             alt=""/>
    </div>

    <!-- Welcome section -->
    <div class="card welcome-container">
        <div class="card-body welcome-card">
            <h2 class="card-title">Wilkommen</h2>
            <p class="mt-4">Wir freuen uns riesig, diesen besonderen Moment mit euch teilen zu dürfen.<br/>
                Hier findet ihr alle wichtigen Informationen rund um unsere Hochzeit – von Ablaufplänen bis zu
                Anreisemöglichkeiten</p>
            <p>Liebe Grüße,
                <strong>Romina und Simon</strong>
            </p>
        </div>
    </div>

    <!-- RSVP section -->
    @if (AccessService.CanAccessRsvp(settings.RsvpEnabled))
    {
        <div class="card welcome-container mt-2">
            <div class="card-body welcome-card">
                <RSVP />
            </div>
        </div>
    }

    <!-- Schedule section -->
    <div class="card welcome-container mt-2">
        <div class="card-body welcome-card">
            <Schedule />
        </div>
    </div>
    
    <!-- Addresses section -->
    <div class="card welcome-container mt-2">
        <div class="card-body welcome-card">
            <Addresses />
        </div>
    </div>
</div>

@code {
    private AppSettings settings => SettingsService.CurrentSettings;

    protected override async Task OnInitializedAsync()
    {
        await SettingsService.LoadSettings();
        AccessService.OnChange += StateHasChanged;
        SettingsService.OnSettingsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        AccessService.OnChange -= StateHasChanged;
        SettingsService.OnSettingsChanged -= StateHasChanged;
    }
}